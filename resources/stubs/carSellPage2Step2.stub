{{--<form action="/file-upload"    class="dropzone"  id="my-awesome-dropzone"></form>--}}
<form id="form-2" enctype="multipart/form-data">
    @csrf
    <div class="col-md-12">
        <div class="input-group mb-3">
            <div class="input-group-prepend">
                <span class="input-group-text">Thumbnail</span>
            </div>
            <div class="custom-file">
                <input type="file" name="thumbnail" class="custom-file-input" id="thumbnail">
                <label class="custom-file-label" for="thumbnail">Choose file</label>
            </div>
        </div>
        <div class="col-md-12">
            <div id="preview-thumb" class="mb-3">
                @if($car->metaValue("thumbnail")!=null)
                    <img class="thumbimage" src="{{$car->metaValue("thumbnail")}}" height="180px"/>
                @endif
            </div>
        </div>

        <div class="input-group mb-3">
            <div class="input-group-prepend">
                <span class="input-group-text">Media</span>
            </div>
            <div class="custom-file">
                <input type="file" name="medias[]" multiple class="custom-file-input" id="media" accept="image/x-png,image/gif,image/jpeg">
                <label class="custom-file-label" for="media">Choose file</label>
            </div>
        </div>
        <div class="col-md-12">
            <div id="preview-image">
                @if($car->metaArray("medias")!=null)
                    @foreach($car->metaArray("medias") as $imgs)
                        <div class='previewImg'>
                            <div class='thumbimage'>
                                <img src="{{$imgs}}" />
                            </div>
                            <button type="button" onclick="removeImg(this, '{{$imgs}}')" class='btn btn-round btn-sm btn-danger' ><i class='fas fa-times'></i></button>
                        </div>
                    @endforeach
                @endif
            </div>
        </div>
        <div class="col-md-12">
            <div class="form-group">
                <label for="link">Youtube link</label>
                <input type="text" name="link" class="form-control" id="link" onchange="embedLink(this)">
                <div class="col-md-12 text-center mt-3">
                    <div id="video-container"></div>
                </div>
            </div>
        </div>
    </div>

    @if(isset($edit) && $edit)
    <div style="float:left;">
        <button class="btn btn-success btn-round shadow-green px-5 py-2" type="button" id="saveBtn" onclick="save()">Save</button>
    </div>
    @endif
    <div style="float:right;">
        <button class="btn btn-light btn-round px-5 py-2 mr-3" type="button" id="prevBtn" onclick="nextPrev(-1)">Previous</button>
        <button class="btn btn-danger btn-round shadow-red px-5 py-2" type="button" id="nextBtn" onclick="{{ (isset($edit) && $edit)?'nextPrev(1)':'step2Submit(()=>{})' }}">Next</button>
    </div>
</form>

<script>
    // $(document).ready(function () {
    //     $("#dropzone_multiple").dropzone({
    //         paramName: "file", // The name that will be used to transfer the file
    //         dictDefaultMessage: 'Drop files to upload <span>or CLICK</span>',
    //         maxFilesize: 1.0 // MB
    //     });
    // });
</script>
<script type="text/javascript">
    var rmvImgs=[];
    var fileList = [];

    function removeImg(target, url) {
        rmvImgs.push(url);

        console.log($(target));
        $(target).parent().remove();
    }

    function rmvImgForm(target, id) {
        var deleteId = 0;
        for(var i=0; i<fileList.length; i++) {
            var name = fileList[i].lastModified + "" + fileList[i].name;
            if (name == id) {
                deleteId = i;
                break;
            }
        }
        fileList.pop(deleteId);
        $(target).parent().remove();
    }

    function embedLink(input) {
        var regExp = /^.*(youtu.be\/|v\/|u\/\w\/|embed\/|watch\?v=|\&v=)([^#\&\?]*).*/;
        var match = input.value.match(regExp);

        if (match && match[2].length == 11) {
            $("#video-container").empty().append(' \
            <iframe width="560" height="315" src="//www.youtube.com/embed/' + match[2]
                +'" frameborder="0" allowfullscreen></iframe>');
        }
    }

    $("#thumbnail").on('change', function () {

        var countFiles = $(this)[0].files.length;

        var imgPath = $(this)[0].value;
        var extn = imgPath.substring(imgPath.lastIndexOf('.') + 1).toLowerCase();
        var image_holder = $("#preview-thumb");
        image_holder.empty();

        if (extn == "gif" || extn == "png" || extn == "jpg" || extn == "jpeg") {
            if (typeof (FileReader) != "undefined") {

                for (var i = 0; i < countFiles; i++) {

                    var reader = new FileReader();
                    reader.onload = function (e) {
                        $("<img />", {
                            "src": e.target.result,
                            "class": "thumbimage",
                            "style": "height: 180px;"
                        }).appendTo(image_holder);
                    }

                    image_holder.show();
                    reader.readAsDataURL($(this)[0].files[i]);
                }

            } else {
                alert("It doesn't supports");
            }
        } else {
            alert("Select Only images");
        }
    });


    $("#media").on('change', function () {
        var files = $(this)[0].files;
        var countFiles = files.length;

        var imgPath = $(this)[0].value;
        var extn = imgPath.substring(imgPath.lastIndexOf('.') + 1).toLowerCase();
        var image_holder = $("#preview-image");
        //image_holder.empty();

        if (extn == "gif" || extn == "png" || extn == "jpg" || extn == "jpeg") {
            if (typeof (FileReader) != "undefined") {

                for (var i = 0; i < countFiles; i++) {
                    var file = files[i];
                    fileList.push(file);
                    console.log(fileList);
                    console.log(files[i].lastModified);

                    var reader = new FileReader();
                    reader.onload = (function (f) {
                        var name = f.lastModified + "" + f.name;
                        return function(e) {
                            var srcimg = e.target.result;
                            $("<div class='previewImg'>" +
                                "<div class='thumbimage'><img src='" + srcimg + "' /></div>" +
                                "<button type='button' onclick=\"rmvImgForm(this, '" + name + "')\" class='btn btn-round btn-sm btn-danger'><i class='fas fa-times'></button>" +
                                "</div>", {}).appendTo(image_holder);
                        };
                    })(file);

                    image_holder.show();
                    reader.readAsDataURL(file);
                }

            } else {
                alert("It doesn't supports");
            }
        } else {
            alert("Select Only images");
        }
    });


    function step2Submit(__callback) {
        event.preventDefault();
        formData = new FormData($("#form-2")[0]);
        formData.delete("medias[]");
        for (var i=0; i<fileList.length; i++) {
            formData.append("medias[]", fileList[i]);
        }
        $.ajax({
            type: 'POST',
            url: '/ajax/contents/' + carId+ '/medias',
            data: formData,
            contentType: false,
            processData: false,
        }).done(function(data) {
            console.log("DONE Media!");

            $.ajax({
                type: 'POST',
                url: '/ajax/contents/' + carId+ '/medias/delete',
                data: {
                    "medias": rmvImgs
                }
            }).done(function(data) {
                console.log("DONE Deleting!");

                $.ajax({
                    type: 'PUT',
                    url: '/ajax/contents/' + carId + '/metas/sync',
                    data: {"link":$('#link').val()}
                }).done(function(data) {
                    $("#demo-spinner").css({'display': 'none'});
                     nextPrev(1);
                    console.log("DONE!");
                    console.log(data);
                    __callback(1);
                }).fail(fail);
            }).fail(fail);
        }).fail(fail);
    }

</script>
